# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-08 09:13
from __future__ import unicode_literals

from django.db import migrations
from django.core.exceptions import ObjectDoesNotExist
from shared.group_permissions import CLIENT_ORGANIZATION_ADMINISTRATOR_GROUP
from django.conf import settings


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    auth_group = apps.get_model("auth", "Group").objects.get(name=CLIENT_ORGANIZATION_ADMINISTRATOR_GROUP)
    #Getting client and project permissions
    perm_models = apps.get_model("contenttypes", "ContentType").objects.filter(app_label__in=['projects', 'clients'], model__in=['project', 'client'])
    permission_filter_list = apps.get_model("auth", "Permission").objects.filter(content_type__in=perm_models)

    for permission in permission_filter_list:
        auth_group.permissions.add(
            apps.get_model("auth", "Permission").objects.get(id=permission.id)
        )


def reverse_func(apps, schema_editor):
    # forwards_func() creates two Country instances,
    # so reverse_func() should delete them.
    auth_group = apps.get_model("auth", "Group").objects.get(name=CLIENT_ORGANIZATION_ADMINISTRATOR_GROUP)
    #Getting client and project permissions
    perm_models = apps.get_model("contenttypes", "ContentType").objects.filter(app_label__in=['projects', 'clients'], model__in=['project', 'client'])
    permission_filter_list = apps.get_model("auth", "Permission").objects.filter(content_type__in=perm_models)

    for permission in permission_filter_list:
        auth_group.permissions.remove(
            apps.get_model("auth", "Permission").objects.get(id=permission.id)
        )


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0009_groupownerpermissions_parent_account'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
